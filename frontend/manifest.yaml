apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: expense
data:
 nginx.conf: |
   user nginx;
   worker_processes auto;
   error_log /var/log/nginx/error.log;
   pid /run/nginx.pid;

   # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
   include /usr/share/nginx/modules/*.conf;

   events {
   worker_connections 1024;
   }

   http {
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

       sendfile            on;
       tcp_nopush          on;
       tcp_nodelay         on;
       keepalive_timeout   65;
       types_hash_max_size 2048;

    include  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
     include  /etc/nginx/conf.d/*.conf;

      server {
         listen       80 default_server;
         listen       [::]:8080 default_server;
         server_name  _;
         root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
      include /etc/nginx/default.d/*.conf;

    	
        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
      }
    }
      

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  # these labels are expense resources
  labels:
    app: frontend
    tier: web
    project: expense
spec:
# modify replicas according to your case
  replicas: 1
  selector:
  # replicaset use these labels to find the pods for creating desired number of replicas
    matchLabels:
      app: frontend
      tier: web
      project: expense
  # pod template
  template:
    metadata:
      labels:
        app: frontend
        tier: web
        project: expense
    spec:   
      volumes:
      - name: nginx
        configMap:
          name: nginx
          items:
          - key: nginx.conf
            path: nginx.conf
      containers:
      - name: nginx
        image: ayeshacs540/frontend:1.0.0
        ports:
        - containerPort: 8080
        volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/nginx.conf
              subPath:  nginx.conf 
              readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: expense
spec: 
  type: LoadBalancer
  selector: #labels arre used as selectors
    app: frontend
    tier: web
    project: expense 
  ports:
  - protocol: TCP
    port: 80 #service port
    targetPort: 8080 #container port number
