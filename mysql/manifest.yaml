apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: expense
  labels:
    app: mysql
    project: expense
    tier: db
spec:
  clusterIP: None
  selector:
    app: mysql
    project: expense
    tier: db
  ports: 
  - protocol: TCP
    port: 3306 # service port
    targetPort: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: expense
spec:
  selector:
    matchLabels:
      app:  mysql
      namespace: expense
      tier: db # has to match .spec.template.metadata.labels
  serviceName: "mysql-headless"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
       app:  mysql
       namespace: expense
       tier: db # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: ayeshacs540/mysql:1.0.0
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql

# user nginx;
# worker_processes auto;
# error_log /var/log/nginx/error.log;
# pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;

# events {
#     worker_connections 1024;
# }

# http {
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';

#     access_log  /var/log/nginx/access.log  main;

#     sendfile            on;
#     tcp_nopush          on;
#     tcp_nodelay         on;
#     keepalive_timeout   65;
#     types_hash_max_size 2048;

#     include             /etc/nginx/mime.types;
#     default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
#     include /etc/nginx/conf.d/*.conf;

#     server {
#         listen       80 default_server;
#         listen       [::]:8080 default_server;
#         server_name  _;
#         root         /usr/share/nginx/html;

#         # Load configuration files for the default server block.
#         include /etc/nginx/default.d/*.conf;

  #location /api/ {
  # proxy_pass http://backend:8080/; # THIS IS THE IP of elb-appserver2 (for getstats)
        
  # }
  
  
#         error_page 404 /404.html;
#             location = /40x.html {
#         }

#         error_page 500 502 503 504 /50x.html;
#             location = /50x.html {
#         }
#     }
# }
  # Instead of creating a pvc resource,you can directly provide in statefulset        
  volumeClaimTemplates:
  - metadata:
      name: mysql
      namespace: expense
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "ebs-sc"
      resources:
        requests:
          storage: 1Gi